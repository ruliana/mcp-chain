name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run unit and component tests
      run: |
        uv run pytest tests/ -m "not integration" -v --tb=short
    
    - name: Run integration tests (Ubuntu/macOS only)
      if: matrix.os != 'windows-latest'
      run: |
        # Use timeout command on Unix systems
        timeout 45 uv run pytest tests/ -m integration -v --tb=short
    
    - name: Run integration tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows doesn't have timeout command, use PowerShell
        $job = Start-Job -ScriptBlock { uv run pytest tests/ -m integration -v --tb=short }
        if (Wait-Job $job -Timeout 45) {
            Receive-Job $job
            Remove-Job $job
        } else {
            Stop-Job $job
            Remove-Job $job
            Write-Error "Integration tests timed out after 45 seconds"
            exit 1
        }

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Check code formatting with ruff
      run: |
        uv run ruff check src/ tests/ --diff
        uv run ruff format src/ tests/ --check

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run tests with coverage (unit tests only for speed)
      run: |
        uv run pytest tests/ -m "not integration" --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false 